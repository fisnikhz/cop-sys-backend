{
    "openapi": "3.0.0",
    "info": {
        "title": "APIs For COP-SYSTEM",
        "version": "1.0.0"
    },
    "paths": {
        "/api/v1/addEquipment": {
            "post": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Add or update equipment",
                "description": "Adds new equipment or updates existing equipment.",
                "operationId": "addEquipment",
                "requestBody": {
                    "description": "Equipment details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "quantity"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "type": "string"
                                    },
                                    "location_name": {
                                        "type": "string"
                                    },
                                    "longitude": {
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "type": "string"
                                    },
                                    "radius": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment added or updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "integer",
                                            "format": "int32"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "location_id": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Database error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/updateEquipment": {
            "put": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Update equipment",
                "description": "Updates existing equipment with the provided data.",
                "operationId": "updateEquipment",
                "requestBody": {
                    "description": "Equipment details to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "equipment_id"
                                ],
                                "properties": {
                                    "equipment_id": {
                                        "description": "ID of the equipment to update",
                                        "type": "string"
                                    },
                                    "name": {
                                        "description": "New name of the equipment",
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "description": "New quantity of the equipment",
                                        "type": "integer"
                                    },
                                    "description": {
                                        "description": "New description of the equipment",
                                        "type": "string"
                                    },
                                    "location_id": {
                                        "description": "New location ID of the equipment",
                                        "type": "string"
                                    },
                                    "location_name": {
                                        "description": "New location name of the equipment",
                                        "type": "string"
                                    },
                                    "longitude": {
                                        "description": "New longitude of the equipment",
                                        "type": "string"
                                    },
                                    "latitude": {
                                        "description": "New latitude of the equipment",
                                        "type": "string"
                                    },
                                    "radius": {
                                        "description": "New radius of the equipment",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment updated successfully"
                                        },
                                        "equipment": {
                                            "properties": {
                                                "name": {
                                                    "description": "Updated name of the equipment",
                                                    "type": "string"
                                                },
                                                "quantity": {
                                                    "description": "Updated quantity of the equipment",
                                                    "type": "integer"
                                                },
                                                "description": {
                                                    "description": "Updated description of the equipment",
                                                    "type": "string"
                                                },
                                                "location_id": {
                                                    "description": "Updated location ID of the equipment",
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "description": "Timestamp when the equipment was created",
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "description": "Timestamp when the equipment was last updated",
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/removeEquipment": {
            "delete": {
                "tags": [
                    "Equipment"
                ],
                "summary": "Remove equipment",
                "description": "Removes the equipment with the provided ID.",
                "operationId": "removeEquipment",
                "requestBody": {
                    "description": "ID of the equipment to remove",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "equipment_id"
                                ],
                                "properties": {
                                    "equipment_id": {
                                        "description": "ID of the equipment to remove",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Equipment removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Equipment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Equipment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "Validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/addPersonnel": {
            "post": {
                "tags": [
                    "Personnel"
                ],
                "summary": "Add a new personnel",
                "description": "Creates a new personnel record with the provided information.",
                "operationId": "addPersonnel",
                "requestBody": {
                    "description": "Personnel data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "rank",
                                    "badge_number",
                                    "hire_date",
                                    "role"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "rank": {
                                        "type": "string",
                                        "example": "Sergeant"
                                    },
                                    "badge_number": {
                                        "type": "string",
                                        "example": "12345"
                                    },
                                    "hire_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2022-03-20"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "example": "http://example.com/profile.jpg"
                                    },
                                    "role": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Personnel added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Personnel added successfully"
                                        },
                                        "personnel": {
                                            "$ref": "#/components/schemas/Personnel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "first_name": [
                                                    "The first name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: Database error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/updatePersonnel": {
            "put": {
                "tags": [
                    "Personnel"
                ],
                "summary": "Update personnel details",
                "description": "Updates the details of an existing personnel.",
                "operationId": "updatePersonnel",
                "requestBody": {
                    "description": "Personnel details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "personnel_id",
                                    "first_name",
                                    "last_name",
                                    "rank",
                                    "badge_number",
                                    "hire_date",
                                    "profile_image",
                                    "role"
                                ],
                                "properties": {
                                    "personnel_id": {
                                        "type": "string",
                                        "format": "uuid"
                                    },
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    },
                                    "rank": {
                                        "type": "string"
                                    },
                                    "badge_number": {
                                        "type": "string"
                                    },
                                    "hire_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "profile_image": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "role": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Personnel updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Personnel updated successfully"
                                        },
                                        "personnel": {
                                            "$ref": "#/components/schemas/Personnel"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/removePersonnel": {
            "delete": {
                "tags": [
                    "Personnel"
                ],
                "summary": "Remove personnel",
                "description": "Removes a personnel entry based on first name and last name.",
                "operationId": "removePersonnel",
                "requestBody": {
                    "description": "Personnel details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Personnel removed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Personnel removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Personnel not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Personnel not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error: Something went wrong"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate a user using username and password.",
                "operationId": "loginUser",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "description": "Access token",
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred: User not found!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/addUser": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Signup",
                "description": "Registers a new user with the provided details.",
                "operationId": "addUser",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "username",
                                    "device_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "username": {
                                        "type": "string"
                                    },
                                    "device_id": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User with the provided email or username already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User with the provided email or username already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/addVehicle": {
            "post": {
                "tags": [
                    "Vehicles"
                ],
                "summary": "Add a new vehicle",
                "description": "Add a new vehicle.",
                "operationId": "e252c925c312a3addee940003b10fd39",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "vehicle_registration": {
                                        "type": "string"
                                    },
                                    "manufacture_name": {
                                        "type": "string"
                                    },
                                    "serie": {
                                        "type": "string"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "produced_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "purchased_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "registration_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "designated_driver": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "car_picture": {
                                        "type": "string"
                                    },
                                    "car_location": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Vehicle added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Vehicle added successfully"
                                        },
                                        "vehicle": {
                                            "$ref": "#/components/schemas/Vehicle"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Database error or server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Database error: ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Personnel": {
                "required": [
                    "first_name",
                    "last_name",
                    "rank",
                    "badge_number",
                    "hire_date",
                    "role"
                ],
                "properties": {
                    "first_name": {
                        "type": "string"
                    },
                    "last_name": {
                        "type": "string"
                    },
                    "rank": {
                        "type": "string"
                    },
                    "badge_number": {
                        "type": "string"
                    },
                    "hire_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "profile_image": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "required": [
                    "name",
                    "email",
                    "password",
                    "username",
                    "device_id"
                ],
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "8ec26c4e-af87-4e1c-a36d-8a02a4c56f59"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "salt": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "device_id": {
                        "type": "string"
                    },
                    "profile_image": {
                        "type": "string",
                        "nullable": true
                    },
                    "role": {
                        "description": "Foreign key referencing the role of the user",
                        "type": "integer",
                        "nullable": true
                    },
                    "personnel_id": {
                        "description": "Foreign key referencing the personnel associated with the user",
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Vehicle": {
                "title": "Vehicle",
                "description": "Vehicle model",
                "properties": {
                    "vehicle_id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "vehicle_registration": {
                        "type": "string",
                        "example": "ABC123"
                    },
                    "manufacture_name": {
                        "type": "string",
                        "example": "Toyota"
                    },
                    "serie": {
                        "type": "string",
                        "example": "Corolla"
                    },
                    "type": {
                        "type": "string",
                        "example": "Sedan"
                    },
                    "produced_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-01-01"
                    },
                    "purchased_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-02-01"
                    },
                    "registration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-03-01"
                    },
                    "designated_driver": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    },
                    "car_picture": {
                        "type": "string",
                        "example": "https://example.com/car.jpg"
                    },
                    "car_location": {
                        "type": "string",
                        "format": "uuid",
                        "example": "123e4567-e89b-12d3-a456-426614174000"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "bearerAuth",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}